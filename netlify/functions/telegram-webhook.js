// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Telegram –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–ø—É—Å–∫–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
const axios = require('axios');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram –±–æ—Ç–∞
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

exports.handler = async function(event, context) {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–æ–¥ –∑–∞–ø—Ä–æ—Å–∞
  if (event.httpMethod !== 'POST') {
    return {
      statusCode: 405,
      body: JSON.stringify({ message: '–ú–µ—Ç–æ–¥ –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω' })
    };
  }

  try {
    // –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    const data = JSON.parse(event.body);
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    const name = data.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    const phone = data.phone || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    const date = data.date || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    const time = data.time || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
    const message = `üîî *–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å –Ω–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ*\n\n` +
                    `üë§ *–ò–º—è*: ${name}\n` +
                    `üì± *–¢–µ–ª–µ—Ñ–æ–Ω*: ${phone}\n` +
                    `üìÖ *–î–∞—Ç–∞*: ${date}\n` +
                    `üïí *–í—Ä–µ–º—è*: ${time}\n` +
                    `\nüìù –ó–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞: ${new Date().toLocaleString('ru-RU')}`;
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
    const telegramResponse = await axios.post(
      `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`,
      {
        chat_id: TELEGRAM_CHAT_ID,
        text: message,
        parse_mode: 'Markdown'
      }
    );
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏
    if (telegramResponse.data && telegramResponse.data.ok) {
      return {
        statusCode: 200,
        headers: {
          'Access-Control-Allow-Origin': '*', // –†–∞–∑—Ä–µ—à–∞–µ–º CORS
          'Access-Control-Allow-Headers': 'Content-Type'
        },
        body: JSON.stringify({ status: 'success', message: '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Telegram' })
      };
    } else {
      throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error);
    
    return {
      statusCode: 500,
      headers: {
        'Access-Control-Allow-Origin': '*', // –†–∞–∑—Ä–µ—à–∞–µ–º CORS
        'Access-Control-Allow-Headers': 'Content-Type'
      },
      body: JSON.stringify({ status: 'error', message: `–û—à–∏–±–∫–∞: ${error.message}` })
    };
  }
}; 